#SETTING UP THE ENVIRONMENT

conda create -n TFM_env python=3.8 pytorch=1.10 cudatoolkit=11.3 torchvision -c pytorch -y
conda activate TFM_env
pip3 install openmim
mim install mmcv-full
git clone https://github.com/open-mmlab/mmpose.git

cd mmpose
pip3 install -e .
mim download mmpose --config associative_embedding_hrnet_w32_coco_512x512  --dest .
cd ..
#copy their requirements folder and their requirements.txt to my main folder


git clone https://github.com/SebastianPartarrieu/live-kinect
#now, move their requirements_openvino.txt to my requirements folder and edit requirements.txt adding in a new line: -r requirements/requirements_openvino.txt

python -m pip install --upgrade pip==21.3.
python -m pip install --upgrade pip
pip install -r requirements.txt

conda install pytorch torchvision cpuonly -c pytorch
pip install open3d>=0.16*

pip install chardet

#pip install -U openmim
#mim install mmcv-full

git clone https://github.com/open-mmlab/mmdetection.git
cd mmdetection
pip install -r requirements/build.txt
pip install -v -e .
# "-v" means verbose, or more output
# "-e" means installing a project in editable mode,
# thus any local modifications made to the code will take effect without reinstallation.
mim download mmdet --config faster_rcnn_r50_fpn_1x_coco --dest .


#pip install torch==1.8.1 torchvision==0.9.1 
#pip3 install mmcv-full==1.3.17 -f https://download.openmmlab.com/mmcv/dist/cpu/torch1.8.0/index.html

#conda install pytorch torchvision torchaudio pytorch-cuda=11.7 -c pytorch -c nvidia



#USING THE ENVIRONMENT
cd ~/Escritorio/TFM/TFM_MariaUrbiola/
conda activate TFM_env
jupyter notebook



